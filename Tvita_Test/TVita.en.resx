<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTVita" xml:space="preserve">
    <value>About T.Vita</value>
  </data>
  <data name="Community" xml:space="preserve">
    <value>Community</value>
  </data>
  <data name="Development" xml:space="preserve">
    <value>Development</value>
  </data>
  <data name="Farms" xml:space="preserve">
    <value>GROWING REGIONS</value>
  </data>
  <data name="FreshProducts" xml:space="preserve">
    <value>Fresh Products</value>
  </data>
  <data name="GotoKitchen" xml:space="preserve">
    <value>T.VITA’S RECIPE</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="HotNews" xml:space="preserve">
    <value>Hot News</value>
  </data>
  <data name="InputYourName" xml:space="preserve">
    <value>Input your name</value>
  </data>
  <data name="Introduction" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="LoadMoreArticles" xml:space="preserve">
    <value>Load more</value>
  </data>
  <data name="LoadMoreNews" xml:space="preserve">
    <value>Load more</value>
  </data>
  <data name="LoadMoreProduct" xml:space="preserve">
    <value>Load more</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="ProcessedProducts" xml:space="preserve">
    <value>Processed Products</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Quality" xml:space="preserve">
    <value>Certifications</value>
  </data>
  <data name="TalkWithMe" xml:space="preserve">
    <value>Talk with me</value>
  </data>
  <data name="Technology" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="TTGroup" xml:space="preserve">
    <value>T&amp;T Group</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value chain</value>
  </data>
  <data name="ViewMore" xml:space="preserve">
    <value>View more</value>
  </data>
  <data name="VisionAndMission" xml:space="preserve">
    <value>Vision - Mission</value>
  </data>
  <data name="WithTvita" xml:space="preserve">
    <value />
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="Distribution" xml:space="preserve">
    <value>Distribution</value>
  </data>
  <data name="PostharvestTechnology" xml:space="preserve">
    <value>Post-harvest technology</value>
  </data>
  <data name="ProductionTechnology" xml:space="preserve">
    <value>Production technology</value>
  </data>
  <data name="Postharvest" xml:space="preserve">
    <value>Post-harvest</value>
  </data>
  <data name="TechTitle1" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="TechTitle2" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="TechTitle3" xml:space="preserve">
    <value>Postharvest</value>
  </data>
  <data name="TechTitle4" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address: 3rd floor, Artex Building, No 172 Ngoc Khanh, Ba Dinh Dist., Hanoi | Tel: 024.3 244 4691</value>
  </data>
  <data name="Contactus" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright by T.Vita</value>
  </data>
  <data name="Domestic" xml:space="preserve">
    <value>Domestic</value>
  </data>
  <data name="Fruits" xml:space="preserve">
    <value>Fruits</value>
  </data>
  <data name="FruitVegetables" xml:space="preserve">
    <value>Fruit Vegetables</value>
  </data>
  <data name="Howtopreserve" xml:space="preserve">
    <value>How to preserve</value>
  </data>
  <data name="Howtouse" xml:space="preserve">
    <value>How to use</value>
  </data>
  <data name="LeafyVegetables" xml:space="preserve">
    <value>Leafy Vegetables</value>
  </data>
  <data name="Origin" xml:space="preserve">
    <value>Origin</value>
  </data>
  <data name="Overseas" xml:space="preserve">
    <value>Overseas</value>
  </data>
  <data name="Packingspecification" xml:space="preserve">
    <value>Packing specification</value>
  </data>
  <data name="ProcessNew" xml:space="preserve">
    <value>In order to enhance value of Vietnamese-branding agrifoods and bring convenience to every households, T.Vita specially focuses on processed products. By applying European advances in processing technology, including: complete salad processing line, cold chain, freezing and steam-drying. T.Vita provides a wide range of ready-to-eat products, prepacked salads and juices, an indispensable part of your daily meal for its convenience and nutritional values. Let's wait for T.Vita's processed products that will be launched in late 2018.</value>
  </data>
  <data name="ProductInfo" xml:space="preserve">
    <value>Product information</value>
  </data>
  <data name="RelatedProduct" xml:space="preserve">
    <value>Related Product</value>
  </data>
  <data name="RootVegetables" xml:space="preserve">
    <value>Root Vegetables</value>
  </data>
  <data name="FarmsDes" xml:space="preserve">
    <value>T.Vita growing regions are located across highlands, midlands and deltas, providing a wide array of specialty fruits and vegetables year-round.</value>
  </data>
  <data name="TechnologyDes" xml:space="preserve">
    <value>T.Vita focuses on advanced production technology, using Israeli Greenhouse system, automatic irrigation, and imported seed varieties with tolerance to harsh weather and resistance to various diseases.</value>
  </data>
  <data name="ValueChainDes" xml:space="preserve">
    <value>T.Vita develops a complete value chain “from farm to fork”, focusing on post-harvest processing technologies in order to optimize product’s shelf life.</value>
  </data>
  <data name="TTGroupDes" xml:space="preserve">
    <value>T&amp;T Group is one of the leading multinational corporations in Vietnam. Founded in 1993, T&amp;T Group has over 60 independent operating companies, and in a variety of different industries</value>
  </data>
</root>